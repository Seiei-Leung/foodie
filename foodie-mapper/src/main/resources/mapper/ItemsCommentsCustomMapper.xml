<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="top.seiei.mapper.ItemsCommentsCustomMapper" >
  <select id="getCommentLevelCountsVOByItemId" resultType="top.seiei.pojo.vo.CommentLevelCountsVO" parameterType="String">
    select
      sum(case when comment_level='1' then 1 else 0 end) as goodCounts,
      sum(case when comment_level='2' then 1 else 0 end) as normalCounts,
      sum(case when comment_level='3' then 1 else 0 end) as badCounts,
      count(item_id) as totalCounts
    from
      items_comments
    where
      item_id = #{itemId}
  </select>
  <select id="getCommentVOByItemIdAndCommentLevel" resultType="top.seiei.pojo.vo.CommentVO" parameterType="Map">
    select
    ic.comment_level as commentLevel,
    ic.content as content,
    ic.sepc_name as sepcName,
    ic.created_time as createdTime,
    u.face as userFace,
    u.nickname as nickName
    from
    items_comments ic
    left join
    users u
    on ic.user_id = u.id
    where
    ic.item_id = #{itemId}
    <if test="commentLevel != null">
      and
      ic.comment_level = #{commentLevel}
    </if>
  </select>
  <insert id="saveComments" parameterType="Map">
    insert into items_comments
    (
      id,
      user_id,
      item_id,
      item_name,
      item_spec_id,
      sepc_name,
      comment_level,
      content,
      created_time,
      updated_time
    )
    values 
    <foreach collection="commentList" item="item" separator=",">
      (
        #{item.commentId},
        #{userId},
        #{item.itemId},
        #{item.itemName},
        #{item.itemSpecId},
        #{item.itemSpecName},
        #{item.commentLevel},
        #{item.content},
        now(),
        now()
      )
    </foreach>
  </insert>
  <select id="getCommentListByUserId" parameterType="String" resultType="top.seiei.pojo.vo.center.MyCommentVO">
      SELECT
        ic.id as commentId,
        ic.content as content,
        ic.created_time as createdTime,
        ic.item_id as itemId,
        ic.item_name as itemName,
        ic.sepc_name as sepcName,
        oi.item_img as itemImg
      FROM
        items_comments ic
      LEFT JOIN
        order_items oi
      ON
        ic.item_id = oi.item_id
      WHERE
        ic.user_id = #{userId}
      ORDER BY
        ic.created_time
  </select>
</mapper>